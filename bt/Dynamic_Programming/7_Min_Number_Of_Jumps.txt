Question: Min Number Of Jumps

You are given a non-empty array of integers. Each element represents the maximum number of steps you can take forward. For example, if the element at index 1 is 3, you can go from index 1 to index 2, 3, or 4. Write a function that returns the minimum number of jumps needed to reach the final index. Note that jumping from index i to index i + x always constitutes 1 jump, no matter how large x is.

------------------------------------------------------ IDEA ---------------------------------------------


---------------------------------------------------------------------------------------------------------
------------------------------------------------------- CODE --------------------------------------------
#include <vector>
using namespace std;

int minNumberOfJumps(vector<int> array) {
  vector<int> min_jumps(array.size(),INT_MAX);
	min_jumps[0] = 0;
	for(int i = 1; i < min_jumps.size(); i++)
	{
		for(int j = 0; j < i; j++)
		{
			if(i-j <= array[j]) min_jumps[i] = min(min_jumps[i],min_jumps[j] + 1);
		}
	}
  return min_jumps[min_jumps.size()-1];
}
--------------------------------------------------------------------------------------------------------------